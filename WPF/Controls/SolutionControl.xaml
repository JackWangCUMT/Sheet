<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Sheet.SolutionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="150">
    <UserControl.Resources>
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <!--<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
            <!--<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
            <Setter Property="Padding" Value="1,0,0,0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewItemFocusVisual}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Grid x:Name="Bd">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Width" Value="16"/>
                                            <Setter Property="Height" Value="16"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="IsChecked" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="PageContextMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem x:Name="PageInsertBefore" Header="Insert Page _Before" Click="PageInsertBefore_Click"/>
            <MenuItem x:Name="PageInsertAfter" Header="Insert Page _After" Click="PageInsertAfter_Click"/>
            <Separator/>
            <MenuItem x:Name="PageDuplicate" Header="_Duplicate Page" Click="PageDuplicate_Click"/>
            <Separator/>
            <MenuItem x:Name="PageRemove" Header="_Remove Page" Click="PageRemove_Click"/>
            <Separator/>
            <MenuItem x:Name="PageExport" Header="_Export Page" Click="PageExport_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="DocumentContextMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem x:Name="DocumentAddPage" Header="_Add Page" Click="DocumentAddPage_Click"/>
            <Separator/>
            <MenuItem x:Name="DocumentInsertBofre" Header="Insert Document _Beofre" Click="DocumentInsertBofre_Click"/>
            <MenuItem x:Name="DocumentInsertAfter" Header="Insert Document _After" Click="DocumentInsertAfter_Click"/>
            <Separator/>
            <MenuItem x:Name="DocumentDuplicate" Header="_Duplicate Document" Click="DocumentDuplicate_Click"/>
            <Separator/>
            <MenuItem x:Name="DocumentRemove" Header="_Remove Document" Click="DocumentRemove_Click"/>
            <Separator/>
            <MenuItem x:Name="DocumentExport" Header="_Export Document" Click="DocumentExport_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="TreeViewContextMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem x:Name="TreeAddDocument" Header="_Add Document" Click="TreeAddDocument_Click"/>
        </ContextMenu>
        <Style x:Key="PageTreeViewItemStyle" BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="False"/>
            <Setter Property="ContextMenu" Value="{StaticResource PageContextMenu}"/>
            <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
        </Style>
        <Style x:Key="DocumentTreeViewItemStyle" BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="False"/>
            <Setter Property="ContextMenu" Value="{StaticResource DocumentContextMenu}"/>
            <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <TreeView x:Name="SolutionTree" 
                  ItemsSource="{Binding Documents}"
                  Padding="0"
                  FocusVisualStyle="{x:Null}"
                  Background="Transparent"
                  BorderBrush="{x:Null}" 
                  BorderThickness="0"
                  ContextMenu="{StaticResource TreeViewContextMenu}"
                  ItemContainerStyle="{StaticResource DocumentTreeViewItemStyle}"
                  SelectedItemChanged="TreeView_SelectedItemChanged">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Pages}" ItemContainerStyle="{StaticResource PageTreeViewItemStyle}">
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                <Path x:Name="Page" UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True" Width="16" Height="16" Stretch="Uniform" Fill="LightGray" Data="F1 M 74.9329,1.52588e-005L 0,1.52588e-005L 0,133.333L 105.334,133.333L 105.334,28.9531L 74.9329,1.52588e-005 Z M 77.334,13.3347L 91.334,26.6667L 77.334,26.6667L 77.334,13.3347 Z M 8,125.333L 8,8.00002L 69.334,8.00002L 69.334,34.6667L 97.334,34.6667L 97.334,125.333L 8,125.333 Z "/>
                                <TextBlock Margin="2,0,0,0" Text="{Binding Name}"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                    <!--<Setter Property="Data" TargetName="Page" Value="F1 M 3.30002,7.72234L 18.0024,7.72234L 20.915,4.90233L 0,4.90233L 0,34.1223L 23.94,34.1223L 23.94,16.6891L 20.64,20.6366L 20.64,30.8223L 3.30002,30.8223L 3.30002,7.72234 Z M 32.1965,0.96608C 31.5155,0.317032 30.7294,-0.00498962 29.8383,1.52588e-005C 28.9473,0.00502014 28.1493,0.343033 27.4442,1.01411L 25.2841,3.17421L 28.1162,2.55019L 30.5644,4.99333L 29.8924,7.72234L 32.1005,5.67558C 32.7765,4.97005 33.1286,4.17845 33.1566,3.30089C 33.1846,2.42329 32.8645,1.645 32.1965,0.96608 Z M 23.8026,4.75832L 9.50333,19.4183L 7.89145,25.5589L 7.98914,25.6077L 14.1925,24.1943L 28.4043,9.23256C 28.4313,9.1147 28.5573,8.64314 28.7823,7.81795C 29.0073,6.99275 29.1693,6.52119 29.2683,6.40331L 26.7242,3.84627L 26.6762,3.89427C 26.3884,3.96626 25.8615,4.11024 25.0954,4.32628C 24.3293,4.54231 23.8983,4.68629 23.8026,4.75832 Z M 14.339,21.0265L 14.1436,22.3911L 13.2644,23.2684L 11.7502,23.6095L 9.94296,21.855L 10.3337,20.2955L 11.2129,19.467L 12.5806,19.2233L 14.339,21.0265 Z " />-->
                                    <Setter Property="Fill" TargetName="Page" Value="Red"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                    <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                        <Path x:Name="Document" UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True" Width="16" Height="16" Stretch="Uniform" Fill="LightGray" Data="F1 M 0,3.05176e-005L 0,29.22L 23.94,29.22L 23.94,7.95331L 16.1561,3.05176e-005L 0,3.05176e-005 Z M 3.30002,3.30005L 14.4,3.30005L 14.4,9.06003L 20.64,9.06003L 20.64,25.92L 3.30002,25.92L 3.30002,3.30005 Z M 5.70001,13.0283L 18.24,13.0283L 18.24,14.4L 5.70001,14.4L 5.70001,13.0283 Z M 5.70001,16.74L 18.24,16.74L 18.24,18.24L 5.70001,18.24L 5.70001,16.74 Z M 5.70001,20.58L 18.24,20.58L 18.24,22.1218L 5.70001,22.1218L 5.70001,20.58 Z "/>
                        <TextBlock Margin="2,0,0,0" Text="{Binding Name}"/>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Fill" TargetName="Document" Value="DarkGray" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter Property="Fill" TargetName="Document" Value="LightGray" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Fill" TargetName="Document" Value="Red" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
